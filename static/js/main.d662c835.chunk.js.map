{"version":3,"sources":["mintbean.png","Exchangers.js","App.js","index.js"],"names":["module","exports","Exchangers","props","showValue","display","useState","newCurrency","setnewCurrency","boxes","key","value","rates","Object","keys","forEach","country","push","parseFloat","quantity","length","onChange","event","target","id","className","App","setQuantity","currency","setCurrency","exchange","setExchange","handleChange","preventDefault","currentTarget","base","EUR","onSubmit","fetch","then","response","ok","error","json","body","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,sC,iIC6C5BC,MAzCf,SAAoBC,GAAQ,IAgBtBC,EAIAC,EApBqB,EACaC,mBAAS,IADtB,mBAClBC,EADkB,KACLC,EADK,KAQrBC,EAAQ,CAAC,4BAAQC,IAAI,GAAGC,MAAM,IAArB,MAuBb,OAtBIR,EAAMS,OACQC,OAAOC,KAAKX,EAAMS,OACxBG,SAAQ,SAACC,GACfP,EAAMQ,KAAK,4BAAQP,IAAKM,EAASL,MAAOK,GAAUA,OAKtC,IAAfT,IACDH,EAAYc,WAAWf,EAAK,MAAL,UAAkBI,KAAkBJ,EAAMgB,UAG/C,GAAhBV,EAAMW,SACRf,EAAU,0BAAMgB,SAlBK,SAACC,GACtBd,EAAec,EAAMC,OAAOZ,SAkB1B,2CACA,4BAAQa,GAAG,WAAWC,UAAU,eAC7BhB,GAFH,eASF,6BACGJ,EACD,yBAAKoB,UAAU,UACdrB,KCgFQsB,MAlHf,WAAgB,IAAD,EACmBpB,mBAAS,IAD5B,mBACNa,EADM,KACIQ,EADJ,OAEmBrB,mBAAS,IAF5B,mBAENsB,EAFM,KAEIC,EAFJ,OAGmBvB,mBAAS,CAACsB,SAAU,SAHvC,mBAGNE,EAHM,KAGIC,EAHJ,KAkEPC,EAAe,SAACV,GACpBA,EAAMW,iBACwB,aAA3BX,EAAMY,cAAcV,GACrBG,EAAYL,EAAMY,cAAcvB,OACI,aAA3BW,EAAMY,cAAcV,IAC7BK,EAAYP,EAAMY,cAAcvB,QASpC,OAJImB,EAASK,MACHL,EAASlB,MAAMwB,IAIvB,yBAAKX,UAAU,OACP,0BAAMY,SA7EC,SAACf,GAChBA,EAAMW,iBACW,QAAbL,EACFU,MAAM,kDACLC,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAEPA,EAAW,CAACE,MAAO,gBAItBH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACLb,EAAYa,MAEQ,OAAbhB,EACTU,MAAM,kDACLC,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAEPA,EAAW,CAACE,MAAO,gBAItBH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACLb,EAAYa,MAEQ,QAAbhB,EACTU,MAAM,kDACLC,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAEPA,EAAW,CAACE,MAAO,gBAItBH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACLb,EAAYa,MAEQ,QAAbhB,GACTU,MAAM,kDACLC,MAAK,SAACC,GACL,OAAIA,EAASC,GACJD,EAEPA,EAAW,CAACE,MAAO,gBAItBH,MAAK,SAACC,GAAD,OAAcA,EAASG,UAC5BJ,MAAK,SAACK,GACLb,EAAYa,QAuBE,wCAEM,2BACAnB,UAAU,cACVoB,KAAK,SACLrB,GAAG,WACHH,SAAUW,EACVrB,MAAOQ,KAGb,+BACM,4BAAQK,GAAG,WAAWH,SAAUW,EAAcP,UAAU,oBACtD,4BAAQd,MAAM,KACd,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,SAGR,2BAAOc,UAAU,SAASoB,KAAK,SAASlC,MAAM,YAExD,kBAAC,EAAD,CACAiB,SAAUA,EACVT,SAAWA,EACXP,MAAOkB,EAASlB,UC5G5BkC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d662c835.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mintbean.cf18b629.png\";","import React, { useState } from 'react';\nimport logo from './mintbean.png';\nimport './styles/index.css';\n\nfunction Exchangers(props) {\n  const [newCurrency, setnewCurrency] = useState('')\n\n\n  const updateCurrency = (event) => {\n    setnewCurrency(event.target.value)\n  }\n\n  let boxes = [<option key='' value=''> </option>]\n  if (props.rates) {\n    let countries = Object.keys(props.rates)\n    countries.forEach((country) => {\n        boxes.push(<option key={country} value={country}>{country}</option>)\n    })\n  }\n\n  let showValue\n  if(newCurrency != \"\") {\n    showValue = parseFloat(props[\"rates\"][`${newCurrency}`]) * props.quantity\n  }\n  let display\n  if (boxes.length != 1) {\n    display = <form onChange={updateCurrency}>\n      <label> How many\n      <select id=\"currency\" className=\"newCurrency\">\n        {boxes}\n      </select> is that?\n      </label>\n    </form>\n  }\n\n  return (\n    <div>\n      {display}\n      <div className=\"result\">\n      {showValue}\n      </div>\n    </div>\n  );\n}\n\nexport default Exchangers;\n","import React, { useState } from 'react';\nimport logo from './mintbean.png';\nimport './styles/index.css';\nimport Exchangers from './Exchangers.js'\n\nfunction App() {\n  const [quantity, setQuantity] = useState('');\n  const [currency, setCurrency] = useState('');\n  const [exchange, setExchange] = useState({currency: \"none\"})\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    if (currency === \"USD\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/USD')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"EU\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/EUR')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"INR\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/INR')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"CAD\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/CAD')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    }\n  }\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    if(event.currentTarget.id === \"quantity\") {\n      setQuantity(event.currentTarget.value)\n    } else if (event.currentTarget.id === \"currency\") {\n      setCurrency(event.currentTarget.value)\n    }\n  }\n\n  let value = \"None yet\"\n  if (exchange.base) {\n    value = exchange.rates.EUR\n  }\n\n  return (\n    <div className=\"App\">\n            <form onSubmit={onSubmit}>\n\n                      <label>\n                            I have\n                            <input\n                            className=\"numberInput\"\n                            type=\"number\"\n                            id=\"quantity\"\n                            onChange={handleChange}\n                            value={quantity}\n                            />\n                      </label>\n                      <label>\n                            <select id=\"currency\" onChange={handleChange} className=\"startingCurrency\">\n                              <option value=\"\"></option>\n                              <option value=\"USD\">USD</option>\n                              <option value=\"EU\">EU</option>\n                              <option value=\"INR\">INR</option>\n                              <option value=\"CAD\">CAD</option>\n                            </select>\n                      </label>\n                      <input className=\"button\" type=\"submit\" value=\"Submit\" />\n            </form>\n            <Exchangers\n            currency={currency}\n            quantity ={quantity}\n            rates={exchange.rates}\n            />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}