{"version":3,"sources":["mintbean.png","Exchangers.js","App.js","index.js"],"names":["module","exports","Exchangers","props","showValue","display","useState","newCurrency","setnewCurrency","boxes","key","value","rates","Object","keys","forEach","country","push","startingQuantity","parseFloat","quantity","toFixed","toString","replace","currency","length","onChange","event","target","id","className","App","setQuantity","setCurrency","exchange","setExchange","handleChange","preventDefault","currentTarget","base","EUR","onSubmit","fetch","then","response","ok","error","json","body","type","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35ad48d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mintbean.cf18b629.png\";","import React, { useState } from 'react';\nimport logo from './mintbean.png';\nimport './styles/index.css';\n\nfunction Exchangers(props) {\n  const [newCurrency, setnewCurrency] = useState('')\n\n\n  const updateCurrency = (event) => {\n    setnewCurrency(event.target.value)\n  }\n\n  let boxes = [<option key='' value=''> </option>]\n  if (props.rates) {\n    let countries = Object.keys(props.rates)\n    countries.forEach((country) => {\n        boxes.push(<option key={country} value={country}>{country}</option>)\n    })\n  }\n\n  let showValue\n  if(newCurrency != \"\") {\n    let startingQuantity = parseFloat(props.quantity).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    let value = (parseFloat(props[\"rates\"][`${newCurrency}`]) * props.quantity).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    showValue = `${startingQuantity} ${props.currency} is equivalent to ${value} ${newCurrency}`\n  }\n  let display\n  if (boxes.length != 1) {\n    display = <form onChange={updateCurrency}>\n      <label> Convert to:\n      <select id=\"currency\" className=\"newCurrency\">\n        {boxes}\n      </select>\n      </label>\n    </form>\n  }\n\n  return (\n    <div>\n      {display}\n      <div className=\"result\">\n      {showValue}\n      </div>\n    </div>\n  );\n}\n\nexport default Exchangers;\n","import React, { useState } from 'react';\nimport logo from './mintbean.png';\nimport './styles/index.css';\nimport Exchangers from './Exchangers.js'\n\nfunction App() {\n  const [quantity, setQuantity] = useState('');\n  const [currency, setCurrency] = useState('');\n  const [exchange, setExchange] = useState({currency: \"none\"})\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    if (currency === \"USD\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/USD')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"EU\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/EUR')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"INR\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/INR')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    } else if (currency === \"CAD\") {\n      fetch('https://api.exchangerate-api.com/v4/latest/CAD')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          response = {error: \"bad fetch\"}\n          return response\n        }\n      })\n      .then((response) => response.json())\n      .then((body) => {\n        setExchange(body)\n      })\n    }\n  }\n\n  const handleChange = (event) => {\n    event.preventDefault()\n    if(event.currentTarget.id === \"quantity\") {\n      setQuantity(event.currentTarget.value)\n    } else if (event.currentTarget.id === \"currency\") {\n      setCurrency(event.currentTarget.value)\n    }\n  }\n\n  let value = \"None yet\"\n  if (exchange.base) {\n    value = exchange.rates.EUR\n  }\n\n  return (\n    <div className=\"App\">\n    <h1> Currency Converter </h1>\n            <form onSubmit={onSubmit}>\n\n                      <label>\n                            Starting with: \n                            <input\n                            className=\"numberInput\"\n                            type=\"number\"\n                            id=\"quantity\"\n                            onChange={handleChange}\n                            value={quantity}\n                            />\n                      </label>\n                      <label>\n                            <select id=\"currency\" onChange={handleChange} className=\"startingCurrency\">\n                              <option value=\"\"></option>\n                              <option value=\"USD\">USD</option>\n                              <option value=\"EU\">EU</option>\n                              <option value=\"INR\">INR</option>\n                              <option value=\"CAD\">CAD</option>\n                            </select>\n                      </label>\n                      <input className=\"button\" type=\"submit\" value=\"Submit\" />\n            </form>\n            <Exchangers\n            currency={currency}\n            quantity ={quantity}\n            rates={exchange.rates}\n            />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}